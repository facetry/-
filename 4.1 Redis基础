1.Redis 特点：
    Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。
    Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。
    Redis支持数据的备份，即master-slave模式的数据备份。
2.Redis数据类型：
2.1 string
    string 是 redis 最基本的类型.一个 key 对应一个 value,redis 的 string 可以包含任何数据。
    比如jpg图片或者序列化的对象。string 类型的值最大能存储 512MB
2.2 Hash
    Redis hash 是一个键值(key=>value)对集合。Redis hash 是一个 string 类型的 field 和 value 的映射表，
    hash 特别适合用于存储对象.每个 hash 可以存储 232 -1 键值对（40多亿）
2.3 List
    Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）
    列表最多可存储 232 - 1 元素 (4294967295, 每个列表可存储40多亿)。
2.4 Set
     Redis的Set是string类型的无序集合。集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。
     添加一个 string 元素到 key 对应的 set 集合中，成功返回1，如果元素已经在集合中返回 0，
     如果 key 对应的 set 不存在则返回错误。
 2.5 Zset(Sorted set 有序集合)
 
 3.Redis命令
 3.1 $redis-cli  该命令会连接本地的 redis 服务
     $redis-cli --raw  连接本地redis服务，避免中文乱码
     $redis-cli -h host -p port -a port   远程连接指定redis服务
 3.2 ping 该命令用于检测 redis 服务是否启动。

4.Redis 发布订阅(pub/sub)
  是一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息
  4.1 创建订阅频道
  4.2 客户端订阅该频道
  4.3 publish消息到订阅频道，然后该订阅频道会将消息发送到订阅他的客户端
  
5.Redis事务（redis事务不是原子性的）
 5.1 执行事务的步骤：
     MULTI 开始一个事务
     将多个命令入队到事务中
     由 EXEC 命令触发事务
 5.2 redis事务特点：
     批量操作在发送 EXEC 命令前被放入队列缓存
     收到 EXEC 命令后进入事务执行，事务中任意命令执行失败，其余的命令依然被执行（中间某条指令的失败不会导致前面已做指令的回滚，也不会造成后续的指令不做。）
     在事务执行过程，其他客户端提交的命令请求不会插入到事务执行命令序列中
6. Redis数据备份和恢复
   6.1 备份数据
       使用save命令在 redis 安装目录中创建dump.rdb文件，备份当前数据库
   6.2 数据恢复
       将备份文件 (dump.rdb) 移动到 redis 安装目录并启动服务即可
       *使用命令CONFIG GET dir 输出的 redis 安装目录为 /usr/local/redis/bin。
7.安全性
   config文件中的参数requirepass默认是空，意味着可以直接连接redis不需要密码
8.Redis客户端连接
   Redis 通过监听一个 TCP 端口或者 Unix socket 的方式来接收来自客户端的连接。连接建立好之后，redis内部操作：
      客户端 socket 会被设置为非阻塞模式，因为 Redis 在网络事件处理上采用的是非阻塞多路复用模型
      socket 设置 TCP_NODELAY 属性，禁用 Nagle 算法
      创建一个可读的文件事件用于监听这个客户端 socket 的数据发送


 
