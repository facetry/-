1.依赖注入
其实就是构造函数注入
private readonly Content contents;
public ContentController(IOptions<Content> option)
{
    contents = option.Value;
}
IOptions<Content> option，这个对象的东西就是容器
就像往IServiceCollection 这个容器里面注入方法，这样其他地方使用的时候就能自动注入(依赖注入)了
这就是容器的好处，由容器来统一管理实例的创建和销毁，你只需要关心怎么用就行了，不需要关系怎么创建跟销毁
当然容器创建的实例都是有生命周期的：
Transient： 每一次访问都会创建一个新的实例
Scoped： 在同一个Scope内只初始化一个实例 ，可以理解为（ 每一个request级别只创建一个实例，同一个http request会在一个 scope内）
Singleton ：整个应用程序生命周期以内只创建一个实例
